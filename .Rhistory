##### BERT
bert_names <- names(data.frame(only_analyze))[grep("bert", names(data.frame(only_analyze)))]
add_names <- c('PANSS_Total', 'PANSS_O', 'PANSS_P', 'PANSS_N', 'TD', 'age', 'education')
bert <- select(only_analyze, c(bert_names, add_names))
bert %>%
na.omit() %>%
scale(center = TRUE, scale = TRUE) -> bert
dd <- na.omit(select(to_analyze, c(bert_names, add_names, 'diagnosis') ))
### CA using factoextra & FactoMineR
autoplot(prcomp(bert), data = dd,
colour = 'diagnosis', label = TRUE, label.size = 3, label.repel =TRUE,
loadings = TRUE, loadings.colour = 'black', loadings.label.repel=TRUE,
loadings.label = TRUE, loadings.label.size = 3) + ggtitle('Principal Correspondence Analysis using ggfortify, biplot on suit task BERT with PANSS') + theme(
legend.text = element_text(size = 10))
ggsave("suit_PANSS_BERT.jpeg", width = 35, height = 15, units = "cm")
bert <- select(only_analyze, bert_names)
bert %>%
na.omit() %>%
scale(center = TRUE, scale = TRUE) -> bert
dd <- na.omit(select(to_analyze, c(bert_names, 'diagnosis') ))
### CA using factoextra & FactoMineR
autoplot(prcomp(bert), data = dd,
colour = 'diagnosis', label = TRUE, label.size = 3, label.repel = TRUE,
loadings = TRUE, loadings.colour = 'black', loadings.label.repel = TRUE,
loadings.label = TRUE, loadings.label.size = 3) + ggtitle('Principal Correspondence Analysis using ggfortify, biplot on suit task BERT') + theme(
legend.text = element_text(size = 10))
ggsave("suit_BERT.jpeg", width = 35, height = 15, units = "cm")
##### SIF
sif_names <- names(data.frame(only_analyze))[grep("sif", names(data.frame(only_analyze)))]
sif <- select(only_analyze, c(sif_names, add_names))
sif %>%
na.omit() %>%
scale(center = TRUE, scale = TRUE) -> sif
dd <- na.omit(select(to_analyze, c(sif_names, add_names, 'diagnosis') ))
### CA using factoextra & FactoMineR
autoplot(prcomp(sif), data = dd,
colour = 'diagnosis', label = TRUE, label.size = 3, label.repel = TRUE,
loadings = TRUE, loadings.colour = 'black', loadings.label.repel = TRUE,
loadings.label = TRUE, loadings.label.size = 3) + ggtitle('Principal Correspondence Analysis using ggfortify, biplot on suit task SIF with PANSS') + theme(
legend.text = element_text(size = 10))
ggsave("suit_PANSS_SIF.jpeg", width = 35, height = 15, units = "cm")
sif <- select(only_analyze, sif_names)
sif %>%
na.omit() %>%
scale(center = TRUE, scale = TRUE) -> sif
dd <- na.omit(select(to_analyze, c(sif_names, 'diagnosis') ))
### CA using factoextra & FactoMineR
autoplot(prcomp(sif), data = dd,
colour = 'diagnosis', label = TRUE, label.size = 3, label.repel = TRUE,
loadings = TRUE, loadings.colour = 'black', loadings.label.repel = TRUE,
loadings.label = TRUE, loadings.label.size = 3) + ggtitle('Principal Correspondence Analysis using ggfortify, biplot on suit task SIF') + theme(
legend.text = element_text(size = 10))
ggsave("suit_SIF.jpeg", width = 35, height = 15, units = "cm")
##### ELMO
elmo_names <- names(data.frame(only_analyze))[grep("elmo", names(data.frame(only_analyze)))]
elmo <- select(only_analyze, c(elmo_names, add_names))
elmo %>%
na.omit() %>%
scale(center = TRUE, scale = TRUE) -> elmo
dd <- na.omit(select(to_analyze, c(elmo_names, add_names, 'diagnosis') ))
### CA using factoextra & FactoMineR
autoplot(prcomp(elmo), data = dd,
colour = 'diagnosis', label = TRUE, label.size = 3, label.repel = TRUE,
loadings = TRUE, loadings.colour = 'black', loadings.label.repel = TRUE,
loadings.label = TRUE, loadings.label.size = 3) + ggtitle('Principal Correspondence Analysis using ggfortify, biplot on suit task ELMo with PANSS') + theme(
legend.text = element_text(size = 10))
ggsave("suit_PANSS_ELMo.jpeg", width = 35, height = 15, units = "cm")
elmo <- select(only_analyze, elmo_names)
elmo %>%
na.omit() %>%
scale(center = TRUE, scale = TRUE) -> elmo
dd <- na.omit(select(to_analyze, c(elmo_names, 'diagnosis') ))
### CA using factoextra & FactoMineR
autoplot(prcomp(elmo), data = dd,
colour = 'diagnosis', label = TRUE, label.size = 3, label.repel = TRUE,
loadings = TRUE, loadings.colour = 'black', loadings.label.repel = TRUE,
loadings.label = TRUE, loadings.label.size = 3) + ggtitle('Principal Correspondence Analysis using ggfortify, biplot on suit task ELMo') + theme(
legend.text = element_text(size = 10))
ggsave("suit_ELMo.jpeg", width = 35, height = 15, units = "cm")
setwd("C:/Users/Lenovo/V/studies/HSE/project/schizo/verbal_fluency")
to_analyze <- read_csv('to_analyze.csv')
only_analyze = select(to_analyze, -binary_diagnosis, -diagnosis, -HDRS, -Y2RS, -cluster_degree, -ID, -mean_pause)
library(tidyverse)
library(cluster)
library(languageR)
library(factoextra)
library(FactoMineR)
library(ggfortify)
library(plyr)
to_analyze <- read_csv('to_analyze.csv')
only_analyze = select(to_analyze, -binary_diagnosis, -diagnosis, -HDRS, -Y2RS, -cluster_degree, -ID, -mean_pause)
only_analyze %>%
scale(center = TRUE, scale = TRUE) -> only_analyze
dd <- na.omit(select(to_analyze, -HDRS, -Y2RS))
dd$diagnosis = revalue(as.factor(dd$diagnosis), c("1"="schizophrenia", "0"="control", "2"='schizoaffective disorder', '3'='control with schizo-spectrum tendencies'))
dd <- column_to_rownames(dd, var = "ID")
### CA using factoextra & FactoMineR
autoplot(prcomp(na.omit(only_analyze)), data = dd,
colour = 'diagnosis', label = TRUE, label.size = 3, label.repel = TRUE,
loadings = TRUE, loadings.colour = 'black', loadings.label.repel = TRUE,
loadings.label = TRUE, loadings.label.size = 3)+ggtitle('Principal Correspondence Analysis using ggfortify, biplot on verbal fluency task with PANSS')+ theme(
legend.text = element_text(size = 10))
ggsave("PCA_PANSS_animals_small.jpeg", width = 35, height = 15, units = "cm")
only_analyze = select(to_analyze, -education, -binary_diagnosis, -diagnosis, -HDRS, -Y2RS, -ID, -PANSS_Total, -PANSS_O, -PANSS_P, -PANSS_N, -TD, -cluster_degree, -mean_pause)
only_analyze %>%
scale(center = TRUE, scale = TRUE) -> only_analyze
dd <- na.omit(select(to_analyze, -HDRS, -Y2RS, -PANSS_Total, -PANSS_O, -PANSS_P, -PANSS_N))
dd$diagnosis = revalue(as.factor(dd$diagnosis), c("1"="schizophrenia", "0"="control", "2"='schizoaffective disorder', '3'='control with schizo-spectrum tendencies'))
dd <- column_to_rownames(dd, var = "ID")
### CA using factoextra & FactoMineR
autoplot(prcomp(na.omit(only_analyze)), data = dd,
colour = 'diagnosis', label = TRUE, label.size = 3, label.repel = TRUE,
loadings = TRUE, loadings.colour = 'black', loadings.label.repel = TRUE,
loadings.label = TRUE, loadings.label.size = 3)+ggtitle('Principal Correspondence Analysis using ggfortify, biplot on verbal fluency task')+ theme(
legend.text = element_text(size = 10))
ggsave("PCA_animals_small.jpeg", width = 35, height = 15, units = "cm")
library(tidyverse)
library(cluster)
library(languageR)
library(factoextra)
library(FactoMineR)
library(ggfortify)
library(plyr)
to_analyze <- read_csv('to_analyze.csv')
only_analyze = select(to_analyze, -binary_diagnosis, -diagnosis, -HDRS, -Y2RS, -cluster_degree, -ID, -mean_pause)
only_analyze %>%
scale(center = TRUE, scale = TRUE) -> only_analyze
dd <- na.omit(select(to_analyze, -HDRS, -Y2RS, -mean_pause))
dd$diagnosis = revalue(as.factor(dd$diagnosis), c("1"="schizophrenia", "0"="control", "2"='schizoaffective disorder', '3'='control with schizo-spectrum tendencies'))
dd <- column_to_rownames(dd, var = "ID")
### CA using factoextra & FactoMineR
autoplot(prcomp(na.omit(only_analyze)), data = dd,
colour = 'diagnosis', label = TRUE, label.size = 3, label.repel = TRUE,
loadings = TRUE, loadings.colour = 'black', loadings.label.repel = TRUE,
loadings.label = TRUE, loadings.label.size = 3)+ggtitle('Principal Correspondence Analysis using ggfortify, biplot on verbal fluency task with PANSS')+ theme(
legend.text = element_text(size = 10))
ggsave("PCA_PANSS_animals_small.jpeg", width = 35, height = 15, units = "cm")
only_analyze = select(to_analyze, -education, -binary_diagnosis, -diagnosis, -HDRS, -Y2RS, -ID, -PANSS_Total, -PANSS_O, -PANSS_P, -PANSS_N, -TD, -cluster_degree, -mean_pause)
only_analyze %>%
scale(center = TRUE, scale = TRUE) -> only_analyze
dd <- na.omit(select(to_analyze, -HDRS, -Y2RS, -PANSS_Total, -PANSS_O, -PANSS_P, -PANSS_N, -mean_pause))
dd$diagnosis = revalue(as.factor(dd$diagnosis), c("1"="schizophrenia", "0"="control", "2"='schizoaffective disorder', '3'='control with schizo-spectrum tendencies'))
dd <- column_to_rownames(dd, var = "ID")
### CA using factoextra & FactoMineR
autoplot(prcomp(na.omit(only_analyze)), data = dd,
colour = 'diagnosis', label = TRUE, label.size = 3, label.repel = TRUE,
loadings = TRUE, loadings.colour = 'black', loadings.label.repel = TRUE,
loadings.label = TRUE, loadings.label.size = 3)+ggtitle('Principal Correspondence Analysis using ggfortify, biplot on verbal fluency task')+ theme(
legend.text = element_text(size = 10))
ggsave("PCA_animals_small.jpeg", width = 35, height = 15, units = "cm")
library(tidyverse)
library(cluster)
library(languageR)
library(factoextra)
library(FactoMineR)
library(ggfortify)
library(plyr)
to_analyze <- read_csv('to_analyze.csv')
only_analyze = select(to_analyze, -binary_diagnosis, -diagnosis, -HDRS, -Y2RS, -cluster_degree, -ID, -mean_pause)
only_analyze %>%
scale(center = TRUE, scale = TRUE) -> only_analyze
View(only_analyze)
dd <- na.omit(select(to_analyze, -HDRS, -Y2RS, -mean_pause))
dd$diagnosis = revalue(as.factor(dd$diagnosis), c("1"="schizophrenia", "0"="control", "2"='schizoaffective disorder', '3'='control with schizo-spectrum tendencies'))
dd <- column_to_rownames(dd, var = "ID")
### CA using factoextra & FactoMineR
autoplot(prcomp(na.omit(only_analyze)), data = dd,
colour = 'diagnosis', label = TRUE, label.size = 3, label.repel = TRUE,
loadings = TRUE, loadings.colour = 'black', loadings.label.repel = TRUE,
loadings.label = TRUE, loadings.label.size = 3)+ggtitle('Principal Correspondence Analysis using ggfortify, biplot on verbal fluency task with PANSS')+ theme(
legend.text = element_text(size = 10))
ggsave("PCA_PANSS_animals_small.jpeg", width = 35, height = 15, units = "cm")
only_analyze = select(na.omit(select(to_analyze, -PANSS_Total, -PANSS_O, -PANSS_P, -PANSS_N, -TD)), -education, -binary_diagnosis, -diagnosis, -HDRS, -Y2RS, -ID, -cluster_degree, -mean_pause)
only_analyze %>%
scale(center = TRUE, scale = TRUE) -> only_analyze
dd <- na.omit(select(to_analyze, -HDRS, -Y2RS, -PANSS_Total, -PANSS_O, -PANSS_P, -PANSS_N, -mean_pause))
dd$diagnosis = revalue(as.factor(dd$diagnosis), c("1"="schizophrenia", "0"="control", "2"='schizoaffective disorder', '3'='control with schizo-spectrum tendencies'))
dd <- column_to_rownames(dd, var = "ID")
### CA using factoextra & FactoMineR
autoplot(prcomp(na.omit(only_analyze)), data = dd,
colour = 'diagnosis', label = TRUE, label.size = 3, label.repel = TRUE,
loadings = TRUE, loadings.colour = 'black', loadings.label.repel = TRUE,
loadings.label = TRUE, loadings.label.size = 3)+ggtitle('Principal Correspondence Analysis using ggfortify, biplot on verbal fluency task')+ theme(
legend.text = element_text(size = 10))
only_analyze = select(na.omit(select(to_analyze, -PANSS_Total, -PANSS_O, -PANSS_P, -PANSS_N, -TD, -HDRS, -Y2RS, -ID,)), -education, -binary_diagnosis, -diagnosis, -cluster_degree, -mean_pause)
only_analyze %>%
scale(center = TRUE, scale = TRUE) -> only_analyze
dd <- na.omit(select(to_analyze, -HDRS, -Y2RS, -PANSS_Total, -PANSS_O, -PANSS_P, -PANSS_N, -mean_pause))
dd$diagnosis = revalue(as.factor(dd$diagnosis), c("1"="schizophrenia", "0"="control", "2"='schizoaffective disorder', '3'='control with schizo-spectrum tendencies'))
dd <- column_to_rownames(dd, var = "ID")
### CA using factoextra & FactoMineR
autoplot(prcomp(na.omit(only_analyze)), data = dd,
colour = 'diagnosis', label = TRUE, label.size = 3, label.repel = TRUE,
loadings = TRUE, loadings.colour = 'black', loadings.label.repel = TRUE,
loadings.label = TRUE, loadings.label.size = 3)+ggtitle('Principal Correspondence Analysis using ggfortify, biplot on verbal fluency task')+ theme(
legend.text = element_text(size = 10))
only_analyze = select(na.omit(select(to_analyze, -PANSS_Total, -PANSS_O, -PANSS_P, -PANSS_N, -TD, -HDRS, -Y2RS, -ID, -mean_pause)), -education, -binary_diagnosis, -diagnosis, -cluster_degree)
only_analyze %>%
scale(center = TRUE, scale = TRUE) -> only_analyze
dd <- na.omit(select(to_analyze, -HDRS, -Y2RS, -PANSS_Total, -PANSS_O, -PANSS_P, -PANSS_N, -mean_pause))
dd$diagnosis = revalue(as.factor(dd$diagnosis), c("1"="schizophrenia", "0"="control", "2"='schizoaffective disorder', '3'='control with schizo-spectrum tendencies'))
dd <- column_to_rownames(dd, var = "ID")
### CA using factoextra & FactoMineR
autoplot(prcomp(na.omit(only_analyze)), data = dd,
colour = 'diagnosis', label = TRUE, label.size = 3, label.repel = TRUE,
loadings = TRUE, loadings.colour = 'black', loadings.label.repel = TRUE,
loadings.label = TRUE, loadings.label.size = 3)+ggtitle('Principal Correspondence Analysis using ggfortify, biplot on verbal fluency task')+ theme(
legend.text = element_text(size = 10))
na.omit(select(to_analyze, -PANSS_Total, -PANSS_O, -PANSS_P, -PANSS_N, -TD, -HDRS, -Y2RS, -ID, -mean_pause)
)
only_analyze = select(to_analyze, -education, -binary_diagnosis, -diagnosis, -HDRS, -Y2RS, -ID, -PANSS_Total, -PANSS_O, -PANSS_P, -PANSS_N, -TD, -cluster_degree)
only_analyze %>%
scale(center = TRUE, scale = TRUE) -> only_analyze
View(only_analyze)
only_analyze = select(to_analyze, -education, -binary_diagnosis, -diagnosis, -HDRS, -Y2RS, -ID, -PANSS_O, -PANSS_P, -PANSS_N, -TD, -cluster_degree)
only_analyze %>%
scale(center = TRUE, scale = TRUE) -> only_analyze
only_analyze = select(to_analyze, -education, -binary_diagnosis, -diagnosis, -HDRS, -Y2RS, -ID, -PANSS_O, -PANSS_P, -PANSS_N, -TD, -cluster_degree, -mean_pauuse)
only_analyze %>%
scale(center = TRUE, scale = TRUE) -> only_analyze
dd <- na.omit(select(to_analyze, -HDRS, -Y2RS, -PANSS_Total, -PANSS_O, -PANSS_P, -PANSS_N, -mean_pause))
dd$diagnosis = revalue(as.factor(dd$diagnosis), c("1"="schizophrenia", "0"="control", "2"='schizoaffective disorder', '3'='control with schizo-spectrum tendencies'))
dd <- column_to_rownames(dd, var = "ID")
only_analyze = select(to_analyze, -education, -binary_diagnosis, -diagnosis, -HDRS, -Y2RS, -ID, -PANSS_O, -PANSS_P, -PANSS_N, -TD, -cluster_degree, -mean_pause)
only_analyze %>%
scale(center = TRUE, scale = TRUE) -> only_analyze
dd <- na.omit(select(to_analyze, -HDRS, -Y2RS, -PANSS_Total, -PANSS_O, -PANSS_P, -PANSS_N, -mean_pause))
dd$diagnosis = revalue(as.factor(dd$diagnosis), c("1"="schizophrenia", "0"="control", "2"='schizoaffective disorder', '3'='control with schizo-spectrum tendencies'))
dd <- column_to_rownames(dd, var = "ID")
### CA using factoextra & FactoMineR
autoplot(prcomp(na.omit(only_analyze)), data = dd,
colour = 'diagnosis', label = TRUE, label.size = 3, label.repel = TRUE,
loadings = TRUE, loadings.colour = 'black', loadings.label.repel = TRUE,
loadings.label = TRUE, loadings.label.size = 3)+ggtitle('Principal Correspondence Analysis using ggfortify, biplot on verbal fluency task')+ theme(
legend.text = element_text(size = 10))
ggsave("PCA_animals_small.jpeg", width = 35, height = 15, units = "cm")
library(tidyverse)
library(cluster)
library(languageR)
library(factoextra)
library(FactoMineR)
library(ggfortify)
library(plyr)
to_analyze <- read_csv('to_analyze.csv')
only_analyze = select(to_analyze, -binary_diagnosis, -diagnosis, -HDRS, -Y2RS, -cluster_degree, -ID, -mean_pause)
only_analyze %>%
scale(center = TRUE, scale = TRUE) -> only_analyze
dd <- na.omit(select(to_analyze, -HDRS, -Y2RS))
dd$diagnosis = revalue(as.factor(dd$diagnosis), c("1"="schizophrenia", "0"="control", "2"='schizoaffective disorder', '3'='control with schizo-spectrum tendencies'))
dd <- column_to_rownames(dd, var = "ID")
### CA using factoextra & FactoMineR
autoplot(prcomp(na.omit(only_analyze)), data = dd,
colour = 'diagnosis', label = TRUE, label.size = 3, label.repel = TRUE,
loadings = TRUE, loadings.colour = 'black', loadings.label.repel = TRUE,
loadings.label = TRUE, loadings.label.size = 3)+ggtitle('Principal Correspondence Analysis using ggfortify, biplot on verbal fluency task with PANSS')+ theme(
legend.text = element_text(size = 10))
ggsave("PCA_PANSS_animals_small.jpeg", width = 35, height = 15, units = "cm")
only_analyze = select(to_analyze, -education, -binary_diagnosis, -diagnosis, -HDRS, -Y2RS, -ID, -PANSS_Total, -PANSS_O, -PANSS_P, -PANSS_N, -TD, -cluster_degree, -mean_pause)
only_analyze %>%
scale(center = TRUE, scale = TRUE) -> only_analyze
dd <- na.omit(select(to_analyze, -HDRS, -Y2RS, -PANSS_Total, -PANSS_O, -PANSS_P, -PANSS_N, -mean_pause))
dd$diagnosis = revalue(as.factor(dd$diagnosis), c("1"="schizophrenia", "0"="control", "2"='schizoaffective disorder', '3'='control with schizo-spectrum tendencies'))
dd <- column_to_rownames(dd, var = "ID")
### CA using factoextra & FactoMineR
autoplot(prcomp(na.omit(only_analyze)), data = dd,
colour = 'diagnosis', label = TRUE, label.size = 3, label.repel = TRUE,
loadings = TRUE, loadings.colour = 'black', loadings.label.repel = TRUE,
loadings.label = TRUE, loadings.label.size = 3)+ggtitle('Principal Correspondence Analysis using ggfortify, biplot on verbal fluency task')+ theme(
legend.text = element_text(size = 10))
ggsave("PCA_animals_small.jpeg", width = 35, height = 15, units = "cm")
library(tidyverse)
library(cluster)
library(languageR)
library(factoextra)
library(FactoMineR)
library(ggfortify)
library(plyr)
to_analyze <- read_csv('to_analyze.csv')
only_analyze = select(to_analyze, -binary_diagnosis, -diagnosis, -HDRS, -Y2RS, -cluster_degree, -ID, -mean_pause)
only_analyze %>%
scale(center = TRUE, scale = TRUE) -> only_analyze
dd <- na.omit(select(to_analyze, -HDRS, -Y2RS))
dd$diagnosis = revalue(as.factor(dd$diagnosis), c("1"="schizophrenia", "0"="control", "2"='schizoaffective disorder', '3'='control with schizo-spectrum tendencies'))
dd <- column_to_rownames(dd, var = "ID")
### CA using factoextra & FactoMineR
autoplot(prcomp(na.omit(only_analyze)), data = dd,
colour = 'diagnosis', label = TRUE, label.size = 3, label.repel = TRUE,
loadings = TRUE, loadings.colour = 'black', loadings.label.repel = TRUE,
loadings.label = TRUE, loadings.label.size = 3)+ggtitle('Principal Correspondence Analysis using ggfortify, biplot on verbal fluency task with PANSS')+ theme(
legend.text = element_text(size = 10))
ggsave("PCA_PANSS_animals_small.jpeg", width = 35, height = 15, units = "cm")
library(tidyverse)
library(cluster)
library(languageR)
library(factoextra)
library(FactoMineR)
library(ggfortify)
library(plyr)
to_analyze <- read_csv('to_analyze.csv')
only_analyze = select(to_analyze, -binary_diagnosis, -diagnosis, -HDRS, -Y2RS, -cluster_degree, -ID, -mean_pause)
only_analyze %>%
scale(center = TRUE, scale = TRUE) -> only_analyze
dd <- na.omit(select(to_analyze, -HDRS, -Y2RS))
dd$diagnosis = revalue(as.factor(dd$diagnosis), c("1"="schizophrenia", "0"="control", "2"='schizoaffective disorder', '3'='control with schizo-spectrum tendencies'))
dd <- column_to_rownames(dd, var = "ID")
### CA using factoextra & FactoMineR
autoplot(prcomp(na.omit(only_analyze)), data = dd,
colour = 'diagnosis', label = TRUE, label.size = 3, label.repel = TRUE,
loadings = TRUE, loadings.colour = 'black', loadings.label.repel = TRUE,
loadings.label = TRUE, loadings.label.size = 3)+ggtitle('Principal Correspondence Analysis using ggfortify, biplot on verbal fluency task with PANSS')+ theme(
legend.text = element_text(size = 10))
ggsave("PCA_PANSS_animals_small.jpeg", width = 35, height = 15, units = "cm")
only_analyze = select(to_analyze, -education, -binary_diagnosis, -diagnosis, -HDRS, -Y2RS, -ID, -PANSS_Total, -PANSS_O, -PANSS_P, -PANSS_N, -TD, -cluster_degree, -mean_pause)
only_analyze %>%
scale(center = TRUE, scale = TRUE) -> only_analyze
dd <- na.omit(select(to_analyze, -HDRS, -Y2RS, -PANSS_Total, -PANSS_O, -PANSS_P, -PANSS_N, -mean_pause))
dd$diagnosis = revalue(as.factor(dd$diagnosis), c("1"="schizophrenia", "0"="control", "2"='schizoaffective disorder', '3'='control with schizo-spectrum tendencies'))
dd <- column_to_rownames(dd, var = "ID")
### CA using factoextra & FactoMineR
autoplot(prcomp(na.omit(only_analyze)), data = dd,
colour = 'diagnosis', label = TRUE, label.size = 3, label.repel = TRUE,
loadings = TRUE, loadings.colour = 'black', loadings.label.repel = TRUE,
loadings.label = TRUE, loadings.label.size = 3)+ggtitle('Principal Correspondence Analysis using ggfortify, biplot on verbal fluency task')+ theme(
legend.text = element_text(size = 10))
ggsave("PCA_animals_small.jpeg", width = 35, height = 15, units = "cm")
setwd("C:/Users/Lenovo/V/studies/HSE/project/schizo/verbal_fluency")
library(tidyverse)
library(cluster)
library(languageR)
library(factoextra)
library(FactoMineR)
library(ggfortify)
library(plyr)
to_analyze <- read_csv('to_analyze.csv')
only_analyze = select(to_analyze, -binary_diagnosis, -diagnosis, -HDRS, -Y2RS, -cluster_degree, -ID, -mean_pause)
only_analyze %>%
scale(center = TRUE, scale = TRUE) -> only_analyze
dd <- na.omit(select(to_analyze, -HDRS, -Y2RS))
dd$diagnosis = revalue(as.factor(dd$diagnosis), c("1"="schizophrenia", "0"="control", "2"='schizoaffective disorder', '3'='control with schizo-spectrum tendencies'))
dd <- column_to_rownames(dd, var = "ID")
### CA using factoextra & FactoMineR
autoplot(prcomp(na.omit(only_analyze)), data = dd,
colour = 'diagnosis', label = TRUE, label.size = 3, label.repel = TRUE,
loadings = TRUE, loadings.colour = 'black', loadings.label.repel = TRUE,
loadings.label = TRUE, loadings.label.size = 3)+ggtitle('Principal Correspondence Analysis using ggfortify, biplot on verbal fluency task with PANSS')+ theme(
legend.text = element_text(size = 10))
ggsave("PCA_PANSS_animals_small.jpeg", width = 35, height = 15, units = "cm")
only_analyze = select(to_analyze, -education, -binary_diagnosis, -diagnosis, -HDRS, -Y2RS, -ID, -PANSS_Total, -PANSS_O, -PANSS_P, -PANSS_N, -TD, -cluster_degree, -mean_pause)
only_analyze %>%
scale(center = TRUE, scale = TRUE) -> only_analyze
dd <- na.omit(select(to_analyze, -HDRS, -Y2RS, -PANSS_Total, -PANSS_O, -PANSS_P, -PANSS_N, -mean_pause))
dd$diagnosis = revalue(as.factor(dd$diagnosis), c("1"="schizophrenia", "0"="control", "2"='schizoaffective disorder', '3'='control with schizo-spectrum tendencies'))
dd <- column_to_rownames(dd, var = "ID")
### CA using factoextra & FactoMineR
autoplot(prcomp(na.omit(only_analyze)), data = dd,
colour = 'diagnosis', label = TRUE, label.size = 3, label.repel = TRUE,
loadings = TRUE, loadings.colour = 'black', loadings.label.repel = TRUE,
loadings.label = TRUE, loadings.label.size = 3)+ggtitle('Principal Correspondence Analysis using ggfortify, biplot on verbal fluency task')+ theme(
legend.text = element_text(size = 10))
ggsave("PCA_animals_small.jpeg", width = 35, height = 15, units = "cm")
library(tidyverse)
library(cluster)
library(languageR)
library(factoextra)
library(FactoMineR)
library(ggfortify)
library(plyr)
to_analyze <- read_csv('to_analyze.csv')
only_analyze = select(to_analyze, -binary_diagnosis, -diagnosis, -HDRS, -Y2RS, -cluster_degree, -ID, -mean_pause)
only_analyze %>%
scale(center = TRUE, scale = TRUE) -> only_analyze
dd <- na.omit(select(to_analyze, -HDRS, -Y2RS))
dd$diagnosis = revalue(as.factor(dd$diagnosis), c("1"="schizophrenia", "0"="control", "2"='schizoaffective disorder', '3'='control with schizo-spectrum tendencies'))
dd <- column_to_rownames(dd, var = "ID")
### CA using factoextra & FactoMineR
autoplot(prcomp(na.omit(only_analyze)), data = dd,
colour = 'diagnosis', label = TRUE, label.size = 3, label.repel = TRUE,
loadings = TRUE, loadings.colour = 'black', loadings.label.repel = TRUE,
loadings.label = TRUE, loadings.label.size = 3)+ggtitle('Principal Correspondence Analysis using ggfortify, biplot on verbal fluency task with PANSS')+ theme(
legend.text = element_text(size = 10))
ggsave("PCA_PANSS_animals_small.jpeg", width = 35, height = 15, units = "cm")
only_analyze = select(to_analyze, -education, -binary_diagnosis, -diagnosis, -HDRS, -Y2RS, -ID, -PANSS_Total, -PANSS_O, -PANSS_P, -PANSS_N, -TD, -cluster_degree, -mean_pause)
only_analyze %>%
scale(center = TRUE, scale = TRUE) -> only_analyze
dd <- na.omit(select(to_analyze, -HDRS, -Y2RS, -PANSS_Total, -PANSS_O, -PANSS_P, -PANSS_N, -mean_pause))
dd$diagnosis = revalue(as.factor(dd$diagnosis), c("1"="schizophrenia", "0"="control", "2"='schizoaffective disorder', '3'='control with schizo-spectrum tendencies'))
dd <- column_to_rownames(dd, var = "ID")
### CA using factoextra & FactoMineR
autoplot(prcomp(na.omit(only_analyze)), data = dd,
colour = 'diagnosis', label = TRUE, label.size = 3, label.repel = TRUE,
loadings = TRUE, loadings.colour = 'black', loadings.label.repel = TRUE,
loadings.label = TRUE, loadings.label.size = 3)+ggtitle('Principal Correspondence Analysis using ggfortify, biplot on verbal fluency task')+ theme(
legend.text = element_text(size = 10))
ggsave("PCA_animals_small.jpeg", width = 35, height = 15, units = "cm")
library(tidyverse)
library(cluster)
library(languageR)
library(factoextra)
library(FactoMineR)
library(ggfortify)
library(plyr)
to_analyze <- read_csv('to_analyze.csv')
only_analyze = select(to_analyze, -binary_diagnosis, -diagnosis, -HDRS, -Y2RS, -cluster_degree, -ID, -mean_pause)
only_analyze %>%
scale(center = TRUE, scale = TRUE) -> only_analyze
dd <- na.omit(select(to_analyze, -HDRS, -Y2RS))
dd$diagnosis = revalue(as.factor(dd$diagnosis), c("1"="schizophrenia", "0"="control", "2"='schizoaffective disorder', '3'='control with schizo-spectrum tendencies'))
dd <- column_to_rownames(dd, var = "ID")
### CA using factoextra & FactoMineR
autoplot(prcomp(na.omit(only_analyze)), data = dd,
colour = 'diagnosis', label = TRUE, label.size = 3, label.repel = TRUE,
loadings = TRUE, loadings.colour = 'black', loadings.label.repel = TRUE,
loadings.label = TRUE, loadings.label.size = 3)+ggtitle('Principal Correspondence Analysis using ggfortify, biplot on verbal fluency task with PANSS')+ theme(
legend.text = element_text(size = 10))
ggsave("PCA_PANSS_animals_small.jpeg", width = 35, height = 15, units = "cm")
only_analyze = select(to_analyze, -education, -binary_diagnosis, -diagnosis, -HDRS, -Y2RS, -ID, -PANSS_Total, -PANSS_O, -PANSS_P, -PANSS_N, -TD, -cluster_degree, -mean_pause)
only_analyze %>%
scale(center = TRUE, scale = TRUE) -> only_analyze
dd <- na.omit(select(to_analyze, -HDRS, -Y2RS, -PANSS_Total, -PANSS_O, -PANSS_P, -PANSS_N, -mean_pause))
dd$diagnosis = revalue(as.factor(dd$diagnosis), c("1"="schizophrenia", "0"="control", "2"='schizoaffective disorder', '3'='control with schizo-spectrum tendencies'))
dd <- column_to_rownames(dd, var = "ID")
### CA using factoextra & FactoMineR
autoplot(prcomp(na.omit(only_analyze)), data = dd,
colour = 'diagnosis', label = TRUE, label.size = 3, label.repel = TRUE,
loadings = TRUE, loadings.colour = 'black', loadings.label.repel = TRUE,
loadings.label = TRUE, loadings.label.size = 3)+ggtitle('Principal Correspondence Analysis using ggfortify, biplot on verbal fluency task')+ theme(
legend.text = element_text(size = 10))
ggsave("PCA_animals_small.jpeg", width = 35, height = 15, units = "cm")
View(only_analyze)
library(tidyverse)
library(cluster)
library(languageR)
library(factoextra)
library(FactoMineR)
library(ggfortify)
library(plyr)
to_analyze <- read_csv('to_analyze.csv')
only_analyze = select(to_analyze, -binary_diagnosis, -diagnosis, -HDRS, -Y2RS, -cluster_degree, -ID, -mean_pause)
only_analyze %>%
scale(center = TRUE, scale = TRUE) -> only_analyze
dd <- na.omit(select(to_analyze, -HDRS, -Y2RS))
dd$diagnosis = revalue(as.factor(dd$diagnosis), c("1"="schizophrenia", "0"="control", "2"='schizoaffective disorder', '3'='control with schizo-spectrum tendencies'))
dd <- column_to_rownames(dd, var = "ID")
### CA using factoextra & FactoMineR
autoplot(prcomp(na.omit(only_analyze)), data = dd,
colour = 'diagnosis', label = TRUE, label.size = 3, label.repel = TRUE,
loadings = TRUE, loadings.colour = 'black', loadings.label.repel = TRUE,
loadings.label = TRUE, loadings.label.size = 3)+ggtitle('Principal Correspondence Analysis using ggfortify, biplot on verbal fluency task with PANSS')+ theme(
legend.text = element_text(size = 10))
ggsave("PCA_PANSS_animals_small.jpeg", width = 35, height = 15, units = "cm")
only_analyze = select(to_analyze, -education, -binary_diagnosis, -diagnosis, -HDRS, -Y2RS, -ID, -PANSS_Total, -PANSS_O, -PANSS_P, -PANSS_N, -TD, -cluster_degree, -mean_pause)
only_analyze %>%
scale(center = TRUE, scale = TRUE) -> only_analyze
dd <- na.omit(select(to_analyze, -HDRS, -Y2RS, -PANSS_Total, -PANSS_O, -PANSS_P, -PANSS_N, -mean_pause))
dd$diagnosis = revalue(as.factor(dd$diagnosis), c("1"="schizophrenia", "0"="control", "2"='schizoaffective disorder', '3'='control with schizo-spectrum tendencies'))
dd <- column_to_rownames(dd, var = "ID")
### CA using factoextra & FactoMineR
autoplot(prcomp(na.omit(only_analyze)), data = dd,
colour = 'diagnosis', label = TRUE, label.size = 3, label.repel = TRUE,
loadings = TRUE, loadings.colour = 'black', loadings.label.repel = TRUE,
loadings.label = TRUE, loadings.label.size = 3)+ggtitle('Principal Correspondence Analysis using ggfortify, biplot on verbal fluency task')+ theme(
legend.text = element_text(size = 10))
ggsave("PCA_animals_small.jpeg", width = 35, height = 15, units = "cm")
View(to_analyze)
to_analyze = select(to_analyze, -mean_pause, -HDRS, -Y2RS)
View(to_analyze)
to_analyze <- read_csv('to_analyze.csv')
to_analyze = select(to_analyze, -mean_pause, -HDRS, -Y2RS, -cluster_degree)
only_analyze = select(to_analyze, -binary_diagnosis, -diagnosis, -ID)
only_analyze %>%
scale(center = TRUE, scale = TRUE) -> only_analyze
dd <- na.omit(to_analyze)
dd$diagnosis = revalue(as.factor(dd$diagnosis), c("1"="schizophrenia", "0"="control", "2"='schizoaffective disorder', '3'='control with schizo-spectrum tendencies'))
dd <- column_to_rownames(dd, var = "ID")
### CA using factoextra & FactoMineR
autoplot(prcomp(na.omit(only_analyze)), data = dd,
colour = 'diagnosis', label = TRUE, label.size = 3, label.repel = TRUE,
loadings = TRUE, loadings.colour = 'black', loadings.label.repel = TRUE,
loadings.label = TRUE, loadings.label.size = 3)+ggtitle('Principal Correspondence Analysis using ggfortify, biplot on verbal fluency task with PANSS')+ theme(
legend.text = element_text(size = 10))
ggsave("PCA_PANSS_animals_small.jpeg", width = 35, height = 15, units = "cm")
only_analyze = select(to_analyze, -education, -binary_diagnosis, -diagnosis, -PANSS_Total, -PANSS_O, -PANSS_P, -PANSS_N, -TD)
only_analyze %>%
scale(center = TRUE, scale = TRUE) -> only_analyze
only_analyze = select(to_analyze, -education, -binary_diagnosis, -diagnosis, -PANSS_Total, -PANSS_O, -PANSS_P, -PANSS_N, -TD)
only_analyze = select(to_analyze, -education, -binary_diagnosis, -diagnosis, -PANSS_Total, -PANSS_O, -PANSS_P, -PANSS_N, -TD, -ID)
only_analyze %>%
scale(center = TRUE, scale = TRUE) -> only_analyze
dd <- na.omit(select(to_analyze, -PANSS_Total, -PANSS_O, -PANSS_P, -PANSS_N, -TD))
dd$diagnosis = revalue(as.factor(dd$diagnosis), c("1"="schizophrenia", "0"="control", "2"='schizoaffective disorder', '3'='control with schizo-spectrum tendencies'))
dd <- column_to_rownames(dd, var = "ID")
### CA using factoextra & FactoMineR
autoplot(prcomp(na.omit(only_analyze)), data = dd,
colour = 'diagnosis', label = TRUE, label.size = 3, label.repel = TRUE,
loadings = TRUE, loadings.colour = 'black', loadings.label.repel = TRUE,
loadings.label = TRUE, loadings.label.size = 3)+ggtitle('Principal Correspondence Analysis using ggfortify, biplot on verbal fluency task')+ theme(
legend.text = element_text(size = 10))
ggsave("PCA_animals_small.jpeg", width = 35, height = 15, units = "cm")
only_analyze = select(to_analyze, -education, -binary_diagnosis, -diagnosis, -PANSS_Total, -PANSS_O, -PANSS_P, -PANSS_N, -TD, -ID, -sex, -age)
only_analyze %>%
scale(center = TRUE, scale = TRUE) -> only_analyze
dd <- na.omit(select(to_analyze, -PANSS_Total, -PANSS_O, -PANSS_P, -PANSS_N, -TD))
dd$diagnosis = revalue(as.factor(dd$diagnosis), c("1"="schizophrenia", "0"="control", "2"='schizoaffective disorder', '3'='control with schizo-spectrum tendencies'))
dd <- column_to_rownames(dd, var = "ID")
### CA using factoextra & FactoMineR
autoplot(prcomp(na.omit(only_analyze)), data = dd,
colour = 'diagnosis', label = TRUE, label.size = 3, label.repel = TRUE,
loadings = TRUE, loadings.colour = 'black', loadings.label.repel = TRUE,
loadings.label = TRUE, loadings.label.size = 3)+ggtitle('Principal Correspondence Analysis using ggfortify, biplot on verbal fluency task')+ theme(
legend.text = element_text(size = 10))
ggsave("PCA_animals_small.jpeg", width = 35, height = 15, units = "cm")
ggsave("suit_ELMo.jpeg", width = 35, height = 15, units = "cm")
